// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/google/uuid"
)

type ArticleCreateResponse interface {
	IsArticleCreateResponse()
}

type ArticleGetResponse interface {
	IsArticleGetResponse()
}

type CommentCreateResponse interface {
	IsCommentCreateResponse()
}

type ListArticleGetResponse interface {
	IsListArticleGetResponse()
}

type Article struct {
	ID                uuid.UUID `json:"id"`
	Content           string    `json:"content"`
	CreatedAt         string    `json:"createdAt"`
	CommentPermission bool      `json:"commentPermission"`
}

type ArticleCreateBadRequest struct {
	Message string `json:"message"`
}

func (ArticleCreateBadRequest) IsArticleCreateResponse() {}

type ArticleCreateInput struct {
	ID      uuid.UUID `json:"id"`
	Content string    `json:"content"`
}

type ArticleCreateOk struct {
	Article *Article `json:"article"`
}

func (ArticleCreateOk) IsArticleCreateResponse() {}

type ArticleGetBadRequest struct {
	Message string `json:"message"`
}

func (ArticleGetBadRequest) IsArticleGetResponse() {}

type ArticleGetOk struct {
	Article  *Article   `json:"article"`
	Comments []*Comment `json:"comments,omitempty"`
}

func (ArticleGetOk) IsArticleGetResponse() {}

type Comment struct {
	ID        uuid.UUID  `json:"id"`
	Content   string     `json:"content"`
	CreatedAt string     `json:"createdAt"`
	ArticleID uuid.UUID  `json:"articleId"`
	ParentID  *uuid.UUID `json:"parentId,omitempty"`
}

type CommentCreateBadRequest struct {
	Message string `json:"message"`
}

func (CommentCreateBadRequest) IsCommentCreateResponse() {}

type CommentCreateInput struct {
	ID        uuid.UUID  `json:"id"`
	Content   string     `json:"content"`
	ArticleID uuid.UUID  `json:"articleId"`
	ParentID  *uuid.UUID `json:"parentId,omitempty"`
}

type CommentCreateOk struct {
	Comment *Comment `json:"comment"`
}

func (CommentCreateOk) IsCommentCreateResponse() {}

type ListArticleGetBadRequest struct {
	Message string `json:"message"`
}

func (ListArticleGetBadRequest) IsListArticleGetResponse() {}

type ListArticleGetOk struct {
	Articles []*Article `json:"articles"`
	Total    int32      `json:"total"`
}

func (ListArticleGetOk) IsListArticleGetResponse() {}

type Mutation struct {
}

type Query struct {
}
